security:

    role_hierarchy:
        ROLE_ADMIN: ROLE_USER

    # https://symfony.com/doc/current/security.html#registering-the-user-hashing-passwords
    password_hashers:
        App\Entity\Credentials: 'auto'
        # Symfony\Component\Security\Core\Credentials\PasswordAuthenticatedUserInterface: 'auto'
    # https://symfony.com/doc/current/security.html.html#where-do-users-come-from-user-providers
    
    providers:
            app_user_provider:
                entity:
                    class: App\Entity\Credentials 
                    property: userEmail

        # backend_users:
        #     memory:
        #         users:
        #             john_admin: { password: '$2y$13$jxGxc ... IuqDju', roles: ['ROLE_ADMIN'] }
        #             jane_admin: { password: '$2y$13$PFi1I ... rGwXCZ', roles: ['ROLE_ADMIN', 'ROLE_SUPER_ADMIN'] }

    firewalls:
        dev:
            pattern:
                - ^/_profiler/
                - ^/_wdt/
                - ^/css/
                - ^/images/
                - ^/js/
            security: false
        main:
            lazy: true
            # provider that you set earlier inside providers
            provider:  app_user_provider

            


            # backend_users

            # activate different ways to authenticate
            # https://symfony.com/doc/current/security.html#firewalls-authentication

            # https://symfony.com/doc/current/security/impersonating_user.html
            # switch_user: true

            # authenticators:
            #     - App\Security\YourAuthenticator

            form_login:
                # "app_login" is the name of the route created previously
                login_path: app_login
                check_path: app_login
                enable_csrf: true
            
            remember_me:
                secret: '%kernel.secret%'
                lifetime: 604800
                path: /
                always_remember_me: true
            logout:
                path: app_logout
                # where to redirect after logout
                # target: app_any_route



        

    # Easy way to control access for large sections of your site
    # Note: Only the *first* access control that matches will be used
    access_control:
            - { path: ^/admin, roles: ROLE_ADMIN }
            - { path: ^/profile, roles: ROLE_USER }

when@test:
    security:
        password_hashers:
            # By default, password hashers are resource intensive and take time. This is
            # important to generate secure password hashes. In tests however, secure hashes
            # are not important, waste resources and increase test times. The following
            # reduces the work factor to the lowest possible values.
            Symfony\Component\Security\Core\Credentials\PasswordAuthenticatedUserInterface:
                algorithm: auto
                cost: 4 # Lowest possible value for bcrypt
                time_cost: 3 # Lowest possible value for argon
                memory_cost: 10 # Lowest possible value for argon
